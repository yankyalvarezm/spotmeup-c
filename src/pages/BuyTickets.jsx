import React, { useState, useEffect, useContext } from "react";
import NavBar from "../components/ToolsC/NavBar";
import DynamicLayout from "../components/ToolsC/DynamicLayout";
import { useParams } from "react-router-dom";
import { findEvent } from "../services/events.service";
import { TicketsContext } from "../context/tickets.context";
import CryptoJS from "crypto-js";

const BuyTickets = () => {
  const param = useParams();
  console.log("eventIdParam:", param.eventIdParam);
  const [selected, setSelected] = useState({
    id: "",
    price: 0,
    hasTables: false,
    maxTickets: 1,
  });
  const [event, setEvent] = useState();
  const [isMobile, setIsMobile] = useState(window.innerWidth < 760);
  const { ticketsCart, setTicketsCart } = useContext(TicketsContext);
  const [checkoutTab, setCheckoutTab] = useState(false);

  const handleCheckoutTab = () => {
    setCheckoutTab((prev) => !prev);
  };

  function formatNumberWithCommas(value) {
    const number = parseFloat(value);
    if (isNaN(number)) {
      return value;
    }
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  const [total, setTotal] = useState(0);
  const [cargoServicio, setCargoServicio] = useState(0);

  const calculateTotal = (ticketsCart) => {
    const newTotal = ticketsCart.reduce(
      (total, ticket) => total + ticket.price,
      0
    );
    setTotal(newTotal);
  };

  useEffect(() => {
    calculateTotal(ticketsCart);
    setCargoServicio(total * 0.1);
  }, [ticketsCart, cargoServicio]);

  console.log("üöÄ ~ BuyTickets ~ total:", total);
  console.log("üöÄ ~ BuyTickets ~ cargoServicio:", cargoServicio);
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth < 760);
    };

    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  const getEvent = async () => {
    try {
      const response = await findEvent(param.eventIdParam);
      console.log("GetTheEvent - Success:", response);
      if (response.success) {
        setEvent(response.event);
      }
    } catch (error) {
      console.error("GetTheEvent - Error:", error.response);
    }
  };

  useEffect(() => {
    getEvent();
  }, []);

  const handleAddToCart = () => {
    console.log("Adding to cart:", selected);
    setTicketsCart((prevTicketsCart) => [...prevTicketsCart, selected]);
    setSelected({ id: "", price: 0 });
  };

  const handleRemoveFromCart = (id) => {
    setTicketsCart((prevTicketsCart) => {
      const updatedCart = prevTicketsCart.filter((ticket) => ticket.id !== id);
      return updatedCart;
    });
  };

  const calculateAuthHash = () => {
    const secretKey =
      "asdhakjshdkjasdasmndajksdkjaskldga8odya9d8yoasyd98asdyaisdhoaisyd0a8sydoashd8oasydoiahdpiashd09ayusidhaos8dy0a8dya08syd0a8ssdsax";
    const fields = [
      "39038540035",
      "Prueba AZUL",
      "ECommerce",
      "$",
      "001",
      (total + cargoServicio).toFixed(2).replace(".", ""),
      "000",
      `https://spotmeup.net/approved/${param.eventIdParam}`,
      "https://google.com",
      "https://google.com",
      "1",
      "ticketsAmount",
      ticketsCart.length.toString(),
      "0",
      "",
      "",
      secretKey,
    ];
    const hashString = fields.join("");
    const hash = CryptoJS.HmacSHA512(hashString, secretKey);
    return hash.toString(CryptoJS.enc.Hex);
  };

  return (
    <div>
      <NavBar />
      <div className={checkoutTab ? "checkout-tab" : ""}>
        <h1 className="buy-tickets-title">üëáüèª Select Where You Want To Go üëáüèª</h1>
        <div className="buy-tickets-container">
          <DynamicLayout
            layoutId={event?.layout?._id}
            scale={isMobile ? 0.5 : 0.8}
            edit={false}
            tooltip={true}
            formatPrices={true}
            addToCart={true}
            selected={selected}
            setSelected={setSelected}
          />
          <div className="cart-container">
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="buy-tickets-cart"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M5.79166 2H1V4H4.2184L6.9872 16.6776H7V17H20V16.7519L22.1932 7.09095L22.5308 6H6.6552L6.08485 3.38852L5.79166 2ZM19.9869 8H7.092L8.62081 15H18.3978L19.9869 8Z"
                fill="currentColor"
              />
              <path
                d="M10 22C11.1046 22 12 21.1046 12 20C12 18.8954 11.1046 18 10 18C8.89543 18 8 18.8954 8 20C8 21.1046 8.89543 22 10 22Z"
                fill="currentColor"
              />
              <path
                d="M19 20C19 21.1046 18.1046 22 17 22C15.8954 22 15 21.1046 15 20C15 18.8954 15.8954 18 17 18C18.1046 18 19 18.8954 19 20Z"
                fill="currentColor"
              />
            </svg>
            {ticketsCart.length > 0 && (
              <h1 className="cart-count">{ticketsCart.length}</h1>
            )}
            {selected?.id &&
              !ticketsCart.some((ticket) => ticket.id === selected.id) && (
                <button onClick={handleAddToCart} className="click-inside">
                  Add To Cart
                </button>
              )}
          </div>
        </div>
        {ticketsCart.length > 0 && (
          <div>
            <div className="buy-tickets-form">
              {ticketsCart.map((ticket, index) => (
                <div
                  key={index}
                  className="tickets-selected-container ticket-selected-bg"
                >
                  <h1>Selected:</h1>
                  <h1 className="cart-btns">
                    <button
                      onClick={() => handleRemoveFromCart(ticket.id)}
                      className="remove-from-cart"
                    >
                      -
                    </button>
                    ${formatNumberWithCommas(ticket.price)}
                    {!ticket.hasTables && (
                      <button className="add-from-cart">+</button>
                    )}
                  </h1>
                </div>
              ))}
              <div className="tickets-selected-container ticket-selected-cargo">
                <h1>Cargo x Servicio:</h1>
                <h1>${formatNumberWithCommas(total * 0.1)}</h1>
              </div>
              <div className="tickets-selected-container ticket-selected-total">
                <h1>Total:</h1>
                <h1 className="bold">
                  RD$ {formatNumberWithCommas(total + cargoServicio)}
                </h1>
              </div>
            </div>
            <div className="checkout-cancel-container">
              <button
                className="checkout-btn"
                onClick={() => setCheckoutTab(true)}
              >
                Check-Out
              </button>
              <h1 className="checkout-cancel">Cancel</h1>
            </div>
          </div>
        )}
      </div>
      <div className={checkoutTab ? "checkout-tab-page" : "checkout-tab"}>
        <h1 className="payment-method">Payment Method</h1>
        <div className="card-details">
          <form
            action="https://pruebas.azul.com.do/PaymentPage/"
            method="post"
            id="paymentForm"
            name="paymentForm"
            target="_blank"
          >
            <input
              type="hidden"
              id="MerchantId"
              name="MerchantId"
              value="39038540035"
            />
            <input type="hidden" id="TrxType" name="TrxType" value="Sale" />
            <input
              type="hidden"
              id="MerchantName"
              name="MerchantName"
              value="Prueba AZUL"
            />
            <input
              type="hidden"
              id="MerchantType"
              name="MerchantType"
              value="ECommerce"
            />
            <input
              type="hidden"
              id="CurrencyCode"
              name="CurrencyCode"
              value="$"
            />
            <input
              type="hidden"
              id="OrderNumber"
              name="OrderNumber"
              value="001"
            />
            <input
              type="hidden"
              id="Amount"
              name="Amount"
              value={Math.round((total + cargoServicio) * 100)}
            />
            <input type="hidden" id="ITBIS" name="ITBIS" value="000" />
            <input
              type="hidden"
              id="ApprovedUrl"
              name="ApprovedUrl"
              value={`https://spotmeup.net/approved/${param.eventIdParam}`}
            />
            <input
              type="hidden"
              id="DeclinedUrl"
              name="DeclinedUrl"
              value="https://google.com"
            />
            <input
              type="hidden"
              id="CancelUrl"
              name="CancelUrl"
              value="https://google.com"
            />
            <input
              type="hidden"
              id="UseCustomField1"
              name="UseCustomField1"
              value="1"
            />
            <input
              type="hidden"
              id="CustomField1Label"
              name="CustomField1Label"
              value="ticketsAmount"
            />
            <input
              type="hidden"
              id="CustomField1Value"
              name="CustomField1Value"
              value={ticketsCart.length.toString()}
            />
            <input
              type="hidden"
              id="UseCustomField2"
              name="UseCustomField2"
              value="0"
            />
            <input
              type="hidden"
              id="CustomField2Label"
              name="CustomField2Label"
              value=""
            />
            <input
              type="hidden"
              id="CustomField2Value"
              name="CustomField2Value"
              value=""
            />

            <input
              type="hidden"
              id="AuthHash"
              name="AuthHash"
              value={calculateAuthHash()}
            />
            <input
              type="submit"
              name="submit"
              value="Continuar"
              style={{ fontSize: "20px" }}
            />
          </form>
        </div>
        <div className="security-policy margin-top"></div>
        <div className="privacy-policy">
          <h1 className="payment-method margin-top">Pol√≠tica de Privacidad</h1>
          <p>
            En Spotmeup, nos comprometemos a proteger su privacidad y garantizar
            que su informaci√≥n personal est√© segura. Esta Pol√≠tica de Privacidad
            describe c√≥mo recopilamos, usamos, compartimos y protegemos su
            informaci√≥n personal cuando utiliza nuestros servicios para comprar
            tickets y dise√±ar layouts para eventos.
          </p>
          <p>
            informaci√≥n personal como su nombre, direcci√≥n de correo
            electr√≥nico, n√∫mero de tel√©fono, y direcci√≥n f√≠sica cuando se
            registra en Spotmeup. Adem√°s, recopilamos informaci√≥n de su cuenta,
            incluyendo fotos de perfil, preferencias de usuario y su historial
            de compras. Los promotores que utilizan nuestros servicios pueden
            crear y almacenar dise√±os de layouts para sus eventos, as√≠ como
            descripciones e im√°genes relacionadas con los mismos. Cuando realiza
            una compra, utilizamos Azul como nuestra plataforma de pago segura
            para procesar sus transacciones.
          </p>
          <p>
            Uso de la Informaci√≥n Utilizamos su informaci√≥n personal para
            procesar sus compras de tickets, gestionar su cuenta de usuario y
            mejorar su experiencia en nuestra plataforma. La informaci√≥n
            proporcionada por los promotores sobre los eventos se utiliza para
            facilitar la organizaci√≥n y promoci√≥n de los mismos. Tambi√©n podemos
            utilizar su informaci√≥n de contacto para enviarle notificaciones
            importantes relacionadas con sus compras, actualizaciones de eventos
            y otras comunicaciones relevantes. Spotmeup no comparte su
            informaci√≥n personal con terceros, excepto cuando sea necesario para
            procesar pagos a trav√©s de Azul o cumplir con requisitos legales.
          </p>
          <p>
            Seguridad de la Informaci√≥n En Spotmeup, implementamos medidas de
            seguridad robustas para proteger su informaci√≥n personal contra el
            acceso no autorizado, la alteraci√≥n, divulgaci√≥n o destrucci√≥n.
            Utilizamos tecnolog√≠a de cifrado y otras pr√°cticas de seguridad para
            garantizar que su informaci√≥n est√© segura mientras est√° en tr√°nsito
            y almacenada en nuestros servidores. Sin embargo, le recomendamos
            que tome precauciones adicionales para proteger su informaci√≥n
            personal, como mantener su contrase√±a segura y no compartirla con
            otros.
          </p>
          <p>
            Derechos del Usuario Usted tiene el derecho de acceder, rectificar o
            eliminar su informaci√≥n personal en cualquier momento. Si desea
            ejercer alguno de estos derechos, puede ponerse en contacto con
            nuestro equipo de soporte a trav√©s de los medios proporcionados en
            nuestro sitio web. Nos comprometemos a responder a sus solicitudes
            de manera oportuna y a proporcionarle la asistencia necesaria para
            gestionar su informaci√≥n personal.
          </p>
          <p>
            Cambios en la Pol√≠tica de Privacidad Nos reservamos el derecho de
            actualizar esta Pol√≠tica de Privacidad en cualquier momento.
            Cualquier cambio significativo en la manera en que manejamos su
            informaci√≥n personal ser√° notificado a trav√©s de nuestro sitio web o
            mediante un correo electr√≥nico. Le recomendamos que revise
            peri√≥dicamente esta pol√≠tica para estar informado sobre c√≥mo
            protegemos su informaci√≥n.
          </p>
          <p>
            Contacto Si tiene alguna pregunta o inquietud sobre nuestra Pol√≠tica
            de Privacidad, no dude en ponerse en contacto con nosotros a trav√©s
            de soporte@spotmeup.net
          </p>
        </div>
        <button className="checkout-btn margin-top">Submit Payment</button>
        <h1 className="checkout-cancel" onClick={() => setCheckoutTab(false)}>
          Cancel
        </h1>
      </div>
    </div>
  );
};

export default BuyTickets;
